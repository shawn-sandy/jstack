{
  "status": 1,
  "complete": 1,
  "list": {
    "247320106": {
      "item_id": "247320106",
      "resolved_id": "247320106",
      "given_url": "https://getpocket.com/developer/docs/authentication",
      "given_title": "Pocket Developer Program: Pocket Authentication API: Documentation",
      "favorite": "0",
      "status": "0",
      "time_added": "1642346054",
      "time_updated": "1642346054",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 7,
      "resolved_title": "Pocket",
      "resolved_url": "https://getpocket.com/developer/docs/authentication",
      "excerpt": "The Pocket Authentication API uses a variant of OAuth 2.0 for authentication. OAuth 2.",
      "is_article": "1",
      "is_index": "1",
      "has_video": "0",
      "has_image": "0",
      "word_count": "1962",
      "lang": "en",
      "time_to_read": 9,
      "domain_metadata": {
        "name": "Pocket",
        "logo": "https://logo.clearbit.com/getpocket.com?size=800",
        "greyscale_logo": "https://logo.clearbit.com/getpocket.com?size=800&greyscale=true"
      },
      "listen_duration_estimate": 759
    },
    "3043513400": {
      "item_id": "3043513400",
      "resolved_id": "3043513400",
      "given_url": "https://www.webstoemp.com/blog/performant-data-fetching-promises-eleventy/",
      "given_title": "Performant data fetching with promises and Eleventy - Webstoemp",
      "favorite": "0",
      "status": "0",
      "time_added": "1642351833",
      "time_updated": "1642354648",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 4,
      "resolved_title": "Performant data fetching with promises and Eleventy",
      "resolved_url": "https://www.webstoemp.com/blog/performant-data-fetching-promises-eleventy/",
      "excerpt": "One of my older post is about fetching data from a GraphQL API with Eleventy. While the example code I wrote works, it does not retrieve data in a very performant way. The problem is that I use await in a while loop (like a dummy).",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "0",
      "word_count": "752",
      "lang": "en",
      "time_to_read": 3,
      "top_image_url": "https://www.webstoemp.com/assets/img/blogposts/600x600/dogs-fetching.jpg",
      "listen_duration_estimate": 291
    },
    "3075231126": {
      "item_id": "3075231126",
      "resolved_id": "3075231126",
      "given_url": "https://martinschneider.me/articles/building-a-website-with-11ty-and-wordpress/",
      "given_title": "Building a Blog With 11ty and WordPress › Martin Schneider — Frontend Devel",
      "favorite": "0",
      "status": "0",
      "time_added": "1642352060",
      "time_updated": "1642352060",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 3,
      "resolved_title": "Building a Blog With 11ty and WordPress",
      "resolved_url": "https://martinschneider.me/articles/building-a-website-with-11ty-and-wordpress/",
      "excerpt": "When I decided to move to the Jamstack, I was sure that I wanted to build something with an API and since I’m quite familiar with WordPress and its API that was an easy choice. But what seemed to be an easy task has had its obstacles.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "0",
      "word_count": "1257",
      "lang": "en",
      "time_to_read": 6,
      "listen_duration_estimate": 487
    },
    "3312806511": {
      "item_id": "3312806511",
      "resolved_id": "3312806511",
      "given_url": "https://github.com/rangav/thunder-client-support",
      "given_title": "rangav/thunder-client-support: Thunder Client is a lightweight Rest API Cli",
      "favorite": "0",
      "status": "0",
      "time_added": "1642346207",
      "time_updated": "1642346222",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 6,
      "resolved_title": "Thunder Client",
      "resolved_url": "https://github.com/rangav/thunder-client-support",
      "excerpt": "Thunder Client is a lightweight Rest API Client Extension for Visual Studio Code, hand-crafted by Ranga Vadhineni with simple and clean design. The source code is not open source. You can report any Bugs Or Feature requests here.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "1",
      "word_count": "1240",
      "lang": "en",
      "time_to_read": 6,
      "top_image_url": "https://opengraph.githubassets.com/e0e1ae03d51ad8bee1a7ba35d6bc194ea852f39dfca48c3d76eb8d5d9438485e/rangav/thunder-client-support",
      "domain_metadata": {
        "name": "GitHub",
        "logo": "https://logo.clearbit.com/github.com?size=800",
        "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"
      },
      "listen_duration_estimate": 480
    },
    "3344942275": {
      "item_id": "3344942275",
      "resolved_id": "3344942275",
      "given_url": "https://www.mikestreety.co.uk/blog/creating-an-11ty-collection-from-json-api/",
      "given_title": "Creating an 11ty collection from a JSON API - Mike Street - Lead Developer ",
      "favorite": "1",
      "status": "0",
      "time_added": "1642351797",
      "time_updated": "1642358529",
      "time_read": "0",
      "time_favorited": "1642354246",
      "sort_id": 5,
      "resolved_title": "Creating an 11ty collection from a JSON API",
      "resolved_url": "https://www.mikestreety.co.uk/blog/creating-an-11ty-collection-from-json-api/",
      "excerpt": "11ty is a fantastic static site generator. One of my favourite elements of it is Global Data files. These allow you to have local JSON and other formats and build collections out of them.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "0",
      "word_count": "726",
      "lang": "en",
      "time_to_read": 3,
      "listen_duration_estimate": 281
    },
    "3371099450": {
      "item_id": "3371099450",
      "resolved_id": "3371099450",
      "given_url": "https://www.most-useful.com/eleventy-static-site-generator-from-wordpress.html",
      "given_title": "Eleventy Static Site Generator From WordPress",
      "favorite": "0",
      "status": "0",
      "time_added": "1642352144",
      "time_updated": "1642352144",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 1,
      "resolved_title": "Eleventy Static Site Generator From WordPress",
      "resolved_url": "https://www.most-useful.com/eleventy-static-site-generator-from-wordpress.html",
      "excerpt": "In some circles, static site generators have become all the rage.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "0",
      "word_count": "2247",
      "lang": "en",
      "time_to_read": 10,
      "top_image_url": "https://www.most-useful.com/img/eleventy-wordpress-graphql-1200w.jpeg",
      "listen_duration_estimate": 870
    },
    "3449792707": {
      "item_id": "3449792707",
      "resolved_id": "3449792707",
      "given_url": "https://www.algolia.com/blog/engineering/building-server-rendered-search-for-static-sites-with-11ty-serverless-netlify-and-algolia/",
      "given_title": "Building server-rendered search for static sites with 11ty Serverless, Netl",
      "favorite": "0",
      "status": "0",
      "time_added": "1642352207",
      "time_updated": "1642352207",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 0,
      "resolved_title": "Building server-rendered search for static sites with 11ty Serverless, Netlify, and Algolia",
      "resolved_url": "https://www.algolia.com/blog/engineering/building-server-rendered-search-for-static-sites-with-11ty-serverless-netlify-and-algolia/",
      "excerpt": "Progressive enhancement is an important topic when creating any web site or app. What happens when a user’s browser isn’t able to handle any JavaScript or the specific JavaScript you’re using? If you’re front end fails, you need a fallback to allow basic functionality to keep working.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "1",
      "word_count": "1387",
      "lang": "en",
      "time_to_read": 6,
      "top_image_url": "https://res.cloudinary.com/hilnmyskv/image/upload/q_auto,f_auto/v1633534759/Algolia_com_Blog_assets/Featured_images/engineering/building-server-rendered-search-for-static-sites-with-11ty-serverless-netlify-and-algolia/qwlkg9hzpxu9mvsvlyje.jpg",
      "listen_duration_estimate": 537
    },
    "3474131700": {
      "item_id": "3474131700",
      "resolved_id": "3474131700",
      "given_url": "https://medium.com/nerd-for-tech/debouncing-throttling-in-javascript-d36ace200cea",
      "given_title": "Debouncing & Throttling in JavaScript | by Chidanandan P | Nerd For Tech | ",
      "favorite": "0",
      "status": "0",
      "time_added": "1642338691",
      "time_updated": "1642338694",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 9,
      "resolved_title": "Debouncing & Throttling in JavaScript",
      "resolved_url": "https://medium.com/nerd-for-tech/debouncing-throttling-in-javascript-d36ace200cea",
      "excerpt": "Debouncing and throttling are techniques in javascript to optimise the application and browser performance. What is a debounce function?",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "1",
      "word_count": "820",
      "lang": "en",
      "time_to_read": 4,
      "top_image_url": "https://miro.medium.com/max/1200/1*JdXNjkwq9R5hyZuzWGDF_Q.jpeg",
      "domain_metadata": {
        "name": "Medium",
        "logo": "https://logo.clearbit.com/medium.com?size=800",
        "greyscale_logo": "https://logo.clearbit.com/medium.com?size=800&greyscale=true"
      },
      "listen_duration_estimate": 317
    },
    "3494528344": {
      "item_id": "3494528344",
      "resolved_id": "3494528344",
      "given_url": "https://blog.logrocket.com/going-serverless-eleventy/",
      "given_title": "Going serverless with Eleventy - LogRocket Blog",
      "favorite": "0",
      "status": "0",
      "time_added": "1642345257",
      "time_updated": "1642345278",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 8,
      "resolved_title": "Going serverless with Eleventy",
      "resolved_url": "https://blog.logrocket.com/going-serverless-eleventy/",
      "excerpt": "Using Eleventy alone can help you produce great static websites efficiently and boost performance. However, this does not work well when using dynamic data in your application.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "1",
      "word_count": "1292",
      "lang": "en",
      "time_to_read": 6,
      "top_image_url": "https://blog.logrocket.com/wp-content/uploads/2021/11/serverless-with-eleventy.png",
      "listen_duration_estimate": 500
    },
    "3529691833": {
      "item_id": "3529691833",
      "resolved_id": "3529691833",
      "given_url": "https://griffa.dev/posts/adding-dynamic-content-from-an-api-to-a-static-website-at-build-time/",
      "given_title": "Adding dynamic content from an API to a static website at build time - grif",
      "favorite": "0",
      "status": "0",
      "time_added": "1642352115",
      "time_updated": "1642352118",
      "time_read": "0",
      "time_favorited": "0",
      "sort_id": 2,
      "resolved_title": "Adding dynamic content from an API to a static website at build time",
      "resolved_url": "https://griffa.dev/posts/adding-dynamic-content-from-an-api-to-a-static-website-at-build-time/",
      "excerpt": "I recently launched a re-write of my brothers Guitar teaching business website: cgguitar.co.uk, during this rewrite I had some guiding principles which I believe are best practices when building any website: Use the right tool for the job.",
      "is_article": "1",
      "is_index": "0",
      "has_video": "0",
      "has_image": "1",
      "word_count": "1925",
      "lang": "en",
      "time_to_read": 9,
      "top_image_url": "https://griffa.dev/images/cg-guitar-videos.png",
      "listen_duration_estimate": 745
    }
  },
  "error": null,
  "search_meta": { "search_type": "normal" },
  "since": 1642358919
}
